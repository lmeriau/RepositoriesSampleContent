{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "String"
    }
  },
  "resources": [
    {
      "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/c45a72f3-2b87-4b32-934d-848de6e3497e')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/c45a72f3-2b87-4b32-934d-848de6e3497e')]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "kind": "Scheduled",
      "apiVersion": "2023-02-01-preview",
      "properties": {
        "displayName": "AWS - Impossible travel",
        "description": "",
        "alertDetailsOverride": null,
        "customDetails": null,
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "columnName": "AccountCustomEntity",
                "identifier": "FullName"
              }
            ]
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "SingleAlert"
        },
        "incidentConfiguration": {
          "createIncident": true,
          "groupingConfiguration": {
            "enabled": false,
            "groupByAlertDetails": [],
            "groupByCustomDetails": [],
            "groupByEntities": [],
            "lookbackDuration": "PT5H",
            "matchingMethod": "AllEntities",
            "reopenClosedIncident": false
          }
        },
        "query": "let IP_Data = external_data(network:string,geoname_id:long,continent_code:string,continent_name:string ,country_iso_code:string,country_name:string,is_anonymous_proxy:bool,is_satellite_provider:bool)['https://raw.githubusercontent.com/datasets/geoip2-ipv4/master/data/geoip2-ipv4.csv'];\r\nlet timeframe = ago(3h);\r\n  let threshold = 2;\r\nAWSCloudTrail\r\n| where TimeGenerated > timeframe\r\n| where EventName contains \"login\"\r\n| where isnotempty(SourceIpAddress)\r\n| evaluate ipv4_lookup(IP_Data, SourceIpAddress, network, return_unmatched = true)\r\n| extend UserPrincipalName = tostring(split(UserIdentityPrincipalid,':')[1]), DirectoryRole = tostring(split(SessionIssuerUserName,'_')[1])\r\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), NumOfCountries = dcount(country_iso_code) by UserPrincipalName, DirectoryRole\r\n| where NumOfCountries >= threshold\r\n| extend timestamp = StartTime, AccountCustomEntity = UserPrincipalName",
        "queryPeriod": "PT5H",
        "queryFrequency": "PT5H",
        "sentinelEntitiesMappings": null,
        "severity": "Medium",
        "suppressionDuration": "PT5H",
        "suppressionEnabled": false,
        "tactics": [
          "CredentialAccess",
          "InitialAccess"
        ],
        "techniques": null,
        "templateVersion": null,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "alertRuleTemplateName": null,
        "enabled": true
      }
    }
  ]
}